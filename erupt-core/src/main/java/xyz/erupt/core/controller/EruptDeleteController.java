package xyz.erupt.core.controller;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.web.bind.annotation.*;import xyz.erupt.annotation.fun.PowerObject;import xyz.erupt.core.annotation.EruptRecordOperate;import xyz.erupt.core.annotation.EruptRouter;import xyz.erupt.core.constant.EruptRestPath;import xyz.erupt.core.invoke.DataProcessorManager;import xyz.erupt.core.invoke.DataProxyInvoke;import xyz.erupt.core.naming.EruptRecordNaming;import xyz.erupt.core.service.EruptCoreService;import xyz.erupt.core.service.EruptService;import xyz.erupt.core.service.IEruptDataService;import xyz.erupt.core.util.EruptUtil;import xyz.erupt.core.util.Erupts;import xyz.erupt.core.view.EruptApiModel;import xyz.erupt.core.view.EruptModel;import javax.transaction.Transactional;/** * Erupt 对数据的增删改查 * * @author YuePeng * date 9/28/18. */@Slf4j@RestController@RequestMapping(EruptRestPath.ERUPT_DATA_DELETE)@RequiredArgsConstructorpublic class EruptDeleteController {    private final EruptService eruptService;    @PostMapping("/{erupt}/{id}")    @EruptRecordOperate(value = "删除", dynamicConfig = EruptRecordNaming.class)    @EruptRouter(skipAuthIndex = 3, authIndex = 1, verifyType = EruptRouter.VerifyType.ERUPT)    @Transactional    public EruptApiModel deleteEruptData(@PathVariable("erupt") String erupt, @PathVariable("id") String id) {        EruptModel eruptModel = EruptCoreService.getErupt(erupt);        Erupts.powerLegal(eruptModel, PowerObject::isDelete);        eruptService.verifyIdPermissions(eruptModel, id);        IEruptDataService dataService = DataProcessorManager.getEruptDataProcessor(eruptModel.getClazz());        //获取对象数据信息用于DataProxy函数中        Object obj = dataService.findDataById(eruptModel, EruptUtil.toEruptId(eruptModel, id));        DataProxyInvoke.invoke(eruptModel, (dataProxy -> dataProxy.beforeDelete(obj)));        dataService.deleteData(eruptModel, obj);        this.modifyLog(eruptModel, "DELETE", id);        DataProxyInvoke.invoke(eruptModel, (dataProxy -> dataProxy.afterDelete(obj)));        return EruptApiModel.successApi();    }    @PostMapping("/{erupt}")    @EruptRouter(skipAuthIndex = 3, authIndex = 1, verifyType = EruptRouter.VerifyType.ERUPT)    @EruptRecordOperate(value = "批量删除", dynamicConfig = EruptRecordNaming.class)    public EruptApiModel deleteEruptDataList(@PathVariable("erupt") String erupt, @RequestParam("ids") String[] ids) {        EruptApiModel eruptApiModel = EruptApiModel.successApi();        for (String id : ids) {            eruptApiModel = this.deleteEruptData(erupt, id);            if (eruptApiModel.getStatus() == EruptApiModel.Status.ERROR) break;        }        return eruptApiModel;    }    private void modifyLog(EruptModel eruptModel, String placeholder, String content) {        log.info("[" + eruptModel.getEruptName() + " -> " + placeholder + "]:" + content);    }}